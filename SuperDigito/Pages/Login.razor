@page "/login"
@using SuperDigito.Repository
@using SuperDigito.Models
@inject ILoginRepository LoginRepository
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
@using System.ComponentModel.DataAnnotations

<div class="card mx-auto" style="max-width: 400px;">
    <div class="card-body">
        <h1 class="text-center">Login</h1>

        @if (errorMessage != null)
        {
            <div class="alert alert-danger">@errorMessage</div>
        }

        <EditForm Model="@loginModel" OnValidSubmit="LoginUser">
            <div class="form-group my-3">
                <InputText class="form-control" id="user" @bind-Value="loginModel.User" Placeholder="Usuario" />
                <ValidationMessage For="@(() => loginModel.User)" />
            </div>
            <div class="form-group my-3">
                <InputText type="password" class="form-control" id="password" @bind-Value="loginModel.Password" Placeholder="Contraseña" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            <DataAnnotationsValidator />

            <div class="text-center my-3">
                <button type="submit" class="btn btn-primary">Iniciar sesión</button>
            </div>
        </EditForm>

        <div class="mt-3 text-center">
            <p>¿No tienes una cuenta?</p>
            <button class="btn btn-secondary" @onclick="GoToRegister">Registrarse</button>
        </div>
    </div>
</div>

@code {
    private Models.Login loginModel = new Models.Login();
    private string errorMessage;

    private async Task LoginUser()
    {
        try
        {
            var existingUsers = await LoginRepository.GetLogins();
            var existingUser = existingUsers.FirstOrDefault(u => u.User == loginModel.User && u.Password == loginModel.Password);

            if (existingUser != null)
            {
                HttpContextAccessor.HttpContext.Session.SetString("UserId", existingUser.UserId.ToString());
                NavigationManager.NavigateTo("/calculate");
            }
            else
            {
                errorMessage = "Usuario o contraseña incorrectos";
            }
        }
        catch (Exception ex)
        {
            
        }
    }

    private void GoToRegister()
    {
        NavigationManager.NavigateTo("/register");
    }
}
